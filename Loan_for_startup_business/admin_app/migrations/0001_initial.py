# Generated by Django 4.2.4 on 2023-08-10 09:09

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dob', models.DateField(blank=True, default='2000-12-12')),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female'), ('transgender', 'transgender')], max_length=11)),
                ('email', models.EmailField(db_index=True, max_length=50, unique=True)),
                ('permanent_address', models.TextField()),
                ('current_address', models.TextField()),
                ('mobile', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='IN')),
                ('photo', models.ImageField(blank=True, upload_to='photo/')),
                ('signature', models.ImageField(blank=True, upload_to='signature/')),
                ('role', models.CharField(choices=[('cs', 'customer'), ('lr', 'loan_representative'), ('oh', 'operational_head'), ('lo', 'loan_sanctioning_officer'), ('ad', 'admin'), ('ah', 'account_head')], max_length=20)),
                ('is_active', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('father_name', models.CharField(blank=True, default='', max_length=30)),
                ('father_profeesion', models.CharField(blank=True, default='', max_length=30)),
                ('father_income', models.FloatField(blank=True, default=0.0)),
                ('father_contact', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='IN')),
                ('mother_name', models.CharField(blank=True, default='', max_length=30)),
                ('mother_profeesion', models.CharField(blank=True, default='', max_length=30)),
                ('mother_income', models.FloatField(blank=True, default=0.0)),
                ('mother_contact', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='IN')),
                ('martial_status', models.CharField(choices=[('married', 'married'), ('unmarried', 'unmarried'), ('divorced', 'divorced')], default='unmarried', max_length=20)),
                ('spouse_name', models.CharField(blank=True, default=0.0, max_length=30)),
                ('spouse_income', models.FloatField(blank=True, default=0.0)),
                ('spouse_profeesion', models.CharField(blank=True, default='', max_length=30)),
                ('spouce_contact', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='IN')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='family', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(blank=True, default='', max_length=30, null=True)),
                ('account_number', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('ifsc_code', models.CharField(blank=True, default='', max_length=20)),
                ('passbook_copy', models.ImageField(blank=True, null=True, upload_to='customer/bank/')),
                ('bank_address', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='banks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
